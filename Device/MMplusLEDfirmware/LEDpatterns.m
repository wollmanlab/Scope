%% Define patterns
clear Patterns

Patterns.all=0:255; 

Patterns.top=[0,1,2,3,4,5,6,7,8,9,10,11,12,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,...
51,52,53,54,55,56,57,58,59,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,...
102,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,156,157,158,159,...
160,161,162,163,164,165,166,167,168,169,170,171,184,185,186,187,188,189,190,191,192,193,194,195,...
196,197,230,231,232,233,234,235,236,237,238,244,245,246,247,248,252]; 

Patterns.bottom_leds = [13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,60,61,62,63,64,65,66,67,68,69,70,...
71,72,73,74,75,76,77,78,79,80,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,141,142,143,...
144,145,146,147,148,149,150,151,152,153,154,155,172,173,174,175,176,177,178,179,180,181,182,183,198,199,200,201,202,203,204,...
205,206,207,208,221,222,223,224,225,226,227,228,229,239,240,241,242,243];

Patterns.ring = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47];

Patterns.central_leds = [216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254];

Patterns.left = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,49,50,51,52,53,54,55,...
56,57,58,59,60,61,62,63,64,65,66,67,68,69,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,...
110,111,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,165,166,167,168,169,170,...
171,172,173,174,175,176,192,193,194,195,196,197,198,199,200,201,202,216,217,218,219,220,...
221,222,223,224,236,237,238,239,240,248,249]; 

Patterns.right = setdiff(0:255,Patterns.left); 

Patterns.pizza1 = [45    46    47     0     1     2     3]; 

Patterns.pizza2 = [5     6     7     8     9    10    11];

Patterns.pizza3 = [13    14    15    16    17    18    19];

Patterns.pizza4 = [21    22    23    24    25    26    27];

Patterns.pizza5 = [29    30    31    32    33    34    35];

Patterns.pizza6 = [37    38    39    40    41    42    43];

Patterns.pizza7 = [163   132   133   134   254   254   254];

Patterns.pizza8 = [136   137   138   139   254   254   254];

Patterns.pizza9 = [141   142   143   144   254   254   254];

Patterns.pizza10 = [146   147   148   149   254   254   254];

Patterns.pizza11 = [152   153   154   155   254   254   254];

Patterns.pizza12 = [157   158   159   160   254   254   254];

Patterns.pizza13 = [214   191   192   254   254   254   254];

Patterns.pizza14 = [193   194   195   254   254   254   254];

Patterns.pizza15 = [198   199   200   254   254   254   254];

Patterns.pizza16 = [201   202   203   254   254   254   254];

Patterns.pizza17 = [206   207   208   254   254   254   254];

Patterns.pizza18 = [210   211   212   254   254   254   254];


%% Convert to IntArrays
ptrn_names = fieldnames(Patterns); 
PatternsInIntArrays = zeros(numel(ptrn_names),16); 
for i=1:numel(ptrn_names)
    PatternsInIntArrays(i,:)=edcodeLEDaddresses(Patterns.(ptrn_names{i}));
end

%{
int Matrix[][X] = { {1,2,3,4,...,X},
                    {3,4,5,6,...,X},
                    {1,9,2,8,...,X},
                    {9,8,7,6,...,X} };
%}
fprintf('\n{\n'); 
for r=1:size(PatternsInIntArrays,1)
    fprintf('{'); 
    for c=1:size(PatternsInIntArrays,2)
        fprintf('%d,',PatternsInIntArrays(r,c)); 
    end
    fprintf('\b},\n'); 
end
fprintf('\b\b\n}\n'); 

%%
% import mmcorej.StrVector;
% 
% x = StrVector();
% x.add('63');
% x.add('0');
% 
% Scp.mmc.loadPropertySequence('Arduino-Switch', 'State', x);
% Scp.mmc.startPropertySequence('Arduino-Switch', 'State');
% 
% gui.message("Done");
%     
